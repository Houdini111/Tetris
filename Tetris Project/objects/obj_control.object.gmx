<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.control = id;

show_debug_overlay(true);

global.lBlue = make_color_rgb(1, 255, 255); //Line
global.dBlue = make_color_rgb(0, 0, 255);   //Square
global.yellow = make_color_rgb(255, 255, 1);//RL
global.orange = make_color_rgb(255, 125, 1);//L
global.red = make_color_rgb(254, 0, 0);     //z aka: stairs up and right
global.green = make_color_rgb(0, 255, 1);   //s aka: stairs up and left
global.pink = make_color_rgb(255, 0, 255);  //t

global.hardDrop = true;
global.peiceC = 0;
global.canSpawnNew = true;

for(i = 0; i &lt;= 500; ++i)
{
    if( i &lt; 30 and i &gt;= 0 ) { global.levels[i] = 4; }
    else if( i &lt; 35 and i &gt;= 30 ) { global.levels[i] = 6; }
    else if( i &lt; 40 and i &gt;= 35 ) { global.levels[i] = 8; }
    else if( i &lt; 50 and i &gt;= 40 ) { global.levels[i] = 8; }
    else if( i &lt; 60 and i &gt;= 50 ) { global.levels[i] = 10; }
    else if( i &lt; 70 and i &gt;= 60 ) { global.levels[i] = 12; }
    else if( i &lt; 80 and i &gt;= 70 ) { global.levels[i] = 16; }
    else if( i &lt; 90 and i &gt;= 80 ) { global.levels[i] = 32; }
    else if( i &lt; 100 and i &gt;= 90 ) { global.levels[i] = 48; }
    else if( i &lt; 120 and i &gt;= 100 ) { global.levels[i] = 64; }
    else if( i &lt; 140 and i &gt;= 120 ) { global.levels[i] = 80; }
    else if( i &lt; 160 and i &gt;= 140 ) { global.levels[i] = 96; }
    else if( i &lt; 170 and i &gt;= 160 ) { global.levels[i] = 112; }
    else if( i &lt; 200 and i &gt;= 170 ) { global.levels[i] = 128; }
    else if( i &lt; 220 and i &gt;= 200 ) { global.levels[i] = 144; }
    else if( i &lt; 230 and i &gt;= 220 ) { global.levels[i] = 4; }
    else if( i &lt; 233 and i &gt;= 230 ) { global.levels[i] = 32; }
    else if( i &lt; 236 and i &gt;= 233 ) { global.levels[i] = 64; }
    else if( i &lt; 239 and i &gt;= 236 ) { global.levels[i] = 128; }
    else if( i &lt; 243 and i &gt;= 239 ) { global.levels[i] = 160; }
    else if( i &lt; 247 and i &gt;= 243 ) { global.levels[i] = 192; }
    else if( i &lt; 251 and i &gt;= 247 ) { global.levels[i] = 224; }
    else if( i &lt; 300 and i &gt;= 251 ) { global.levels[i] = 256; }
    else if( i &lt; 330 and i &gt;= 300 ) { global.levels[i] = 512; }
    else if( i &lt; 360 and i &gt;= 330 ) { global.levels[i] = 768; }
    else if( i &lt; 400 and i &gt;= 360 ) { global.levels[i] = 1024; }
    else if( i &lt; 420 and i &gt;= 400 ) { global.levels[i] = 1280; }
    else if( i &lt; 450 and i &gt;= 420 ) { global.levels[i] = 1024; }
    else if( i &lt; 500 and i &gt;= 450 ) { global.levels[i] = 768; }
    else if( i == 500 ) { global.levels[i] = 5120; }
}
global.lines = 0;
global.level = 0;
//global.level = 230;
global.fallSpeed = global.levels[global.level]/256;

previewCount = 3;

global.timeToMove = room_speed;

global.hold = " ";
type = " ";
canSwap = true;

randomize();

for(i = 0; i &lt; previewCount; i++)
{ preview[i] = choose("long", "square", "s", "z", "l", "rl", "t"); } 

newPeice();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.canSpawnNew = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hardDrop = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.hardDrop) { alarm[0] = 1; }
if(!global.canSpawnNew) { alarm[0] = 1; }

//show_debug_message( "0: " + string(global.active.alarm[0]) + "   1: " + string(global.active.alarm[1])  );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_rectangle(global.width, 0, room_width, room_height, false);
draw_set_color(c_black);

middle = global.width + (room_width-global.width)/2

draw_text(middle-20, 180, "LINES");
draw_text(middle, 200, string(global.lines));

draw_text(middle-20, 250, "LEVEL");
draw_text(middle, 270, string(global.level));

draw_text(middle-20, 320, "HOLD");

if(global.hold != " ") { draw_sprite(asset_get_index("spr_" + global.hold), 0, middle-10, 340); }
if(!canSwap) { draw_sprite( asset_get_index("spr_x"), 0, middle-10, 340); }

draw_text(middle-20, 410, "NEXT");
for(i = 0; i &lt; previewCount; i++)
{ draw_sprite(asset_get_index("spr_" + preview[i]), 0, middle-10, 430+50*i); } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canSwap)
{
    canSwap = false; 
    
    if( global.hold == " ")
    {
        global.hold = global.active.type;
        
        global.active.alarm[2] = 1;
        global.active.moving = false;
        for(i = 0; i &lt; 4; i++)
        {
            global.active.segments[i].alarm[0] = 1;
            global.active.ghosts[i].alarm[0] = 1;
        }
        
        newPeice();
    }
    else 
    {
        tmp = global.hold;
        global.hold = global.active.type;
        
        global.active.alarm[2] = 1;
        global.active.moving = false;
        for(i = 0; i &lt; 4; i++)
        {
            global.active.segments[i].alarm[0] = 1;
            global.active.ghosts[i].alarm[0] = 1;
        }
         
        global.control.type = tmp;
        
        newPeice();    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
